{"version":3,"file":"background.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AEnDA;AACA;AACA;AACA;AACA","sources":["webpack://app/./src/background/background.ts","webpack://app/webpack/before-startup","webpack://app/webpack/startup","webpack://app/webpack/after-startup"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconsole.log('from background script');\nchrome.runtime.onMessage.addListener((message) => __awaiter(this, void 0, void 0, function* () {\n    if (message.type === 'get_comments') {\n        console.log('got message');\n        const videoId = message.payload.videoId;\n        // run the specified function with the provided arguments\n        const data = yield getComments(videoId);\n        //save results to local storage\n        sendMessageToContentScript(data, videoId);\n    }\n}));\nconst API_URL = 'https://sbk957ltol.execute-api.us-east-1.amazonaws.com/test/getanalysis';\nconst getComments = (videoId) => __awaiter(this, void 0, void 0, function* () {\n    const fullURL = `${API_URL}?videoid=${videoId}&maxcomments=250`;\n    let data;\n    try {\n        const res = yield fetch(fullURL);\n        if (res.ok) {\n            data = yield res.json();\n            console.log('data from worker', data);\n        }\n        else {\n            console.log(res);\n        }\n        return data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n});\nconst sendMessageToContentScript = (data, videoId) => {\n    const message = {\n        type: 'save_comments_data',\n        payload: {\n            videoId,\n            data\n        }\n    };\n    console.log('data in sent to content', data);\n    chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\n        chrome.tabs.sendMessage(tabs[0].id, message);\n    });\n};\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/background/background.ts\"]();\n",""],"names":[],"sourceRoot":""}