{"version":3,"file":"background.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://app/./src/background/background.ts"],"sourcesContent":["console.log('from background script')\n\nchrome.runtime.onMessage.addListener(async (message) => {\n    if (message.type === 'get_comments') {\n        console.log('got message')\n        const videoId = message.payload.videoId;\n        // run the specified function with the provided arguments\n        const data = await getComments(videoId)\n        //save results to local storage\n        sendMessageToContentScript(data,videoId)\n    }\n  });\n\nconst API_URL = 'https://sbk957ltol.execute-api.us-east-1.amazonaws.com/test/getanalysis'\n\n\nconst getComments = async (videoId) => {\n    const fullURL = `${API_URL}?videoid=${videoId}&maxcomments=250`\n    let data\n    try {\n        const res = await fetch(fullURL)\n        if (res.ok) {\n            data = await res.json()\n            console.log('data from worker', data)\n        } else {\n            console.log(res)\n        }\n        return data\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nconst sendMessageToContentScript = (data,videoId) => {\n    const message = {\n        type: 'save_comments_data',\n        payload: {\n            videoId,\n            data\n        }\n    }\n    console.log('data in sent to content', data)\n    chrome.tabs.query({active: true, currentWindow: true}, function(tabs){\n        chrome.tabs.sendMessage(tabs[0].id, message);  \n    });\n}"],"names":[],"sourceRoot":""}